// Copyright (c) 2024 Project Illium
// Use of this source code is governed by an MIT
// license that can be found in the LICENSE file.

syntax = "proto3";
package wire;
option go_package = "../wire";

import "transactions.proto";
import "blocks.proto";

enum ErrorResponse {
    None       = 0;
    NotFound   = 1;
    BadRequest = 2;
    NotCurrent = 3;
}

message MsgConsensusRequest {
    oneof msg {
        MsgPollRequest poll_request = 1;
        GetBlockReq get_block = 2;
    }
}

message MsgPollRequest {
    uint32 request_ID       = 1;
    repeated uint32 heights = 2;
}

message MsgPollResponse {
    uint32 request_ID    = 1;
    repeated bytes votes = 2;
}

message MsgChainServiceRequest {
    oneof msg {
        GetBlockTxsReq       get_block_txs        = 1;
        GetBlockTxidsReq     get_block_txids      = 2;
        GetBlockReq          get_block            = 3;
        GetBlockIDReq        get_block_id         = 4;
        GetHeadersStreamReq  get_headers_stream   = 5;
        GetBlockTxsStreamReq get_block_txs_stream = 6;
        GetBestReq           get_best             = 7;
    }
}

message GetBlockTxsReq {
    bytes block_ID              = 1;
    repeated uint32 tx_indexes  = 2;
}

message MsgBlockTxsResp {
    repeated Transaction transactions = 1;
    ErrorResponse error               = 2;
}

message GetBlockTxidsReq {
    bytes block_ID = 1;
}

message MsgBlockTxidsResp {
    repeated bytes txids = 1;
    ErrorResponse error  = 2;
}

message GetBlockReq {
    bytes block_ID = 1;
}

message MsgBlockResp {
    Block block         = 1;
    ErrorResponse error = 2;
}

message GetBlockIDReq {
    uint32 height = 1;
}

message MsgGetBlockIDResp {
    bytes block_ID       = 1;
    ErrorResponse error  = 2;
}

message GetHeadersStreamReq {
    uint32 start_height = 1;
}

message GetBlockTxsStreamReq {
    uint32 start_height = 1;
    bool no_proofs      = 2;
}

message GetBestReq {}

message MsgGetBestResp {
    bytes block_ID      = 1;
    uint32 height       = 2;
    ErrorResponse error = 3;
}

message MsgPolicyRequest {
    oneof msg {
        GetFeePerKB get_fee_per_kb                     = 1;
        GetMinStake get_min_stake                      = 2;
        GetBlocksizeSoftLimit get_blocksize_soft_limit = 3;
        GetTreasuryWhitelist get_treasury_whitelist    = 4;
    }
}

message GetFeePerKB {}

message MsgGetFeePerKBResp {
    uint64 fee_per_kb = 1;
}

message GetMinStake {}

message MsgGetMinStakeResp {
    uint64 min_stake = 1;
}

message GetBlocksizeSoftLimit {}

message MsgGetBlocksizeSoftLimitResp {
    uint32 limit = 1;
}

message GetTreasuryWhitelist {}

message MsgGetTreasuryWhitelistResp {
    repeated bytes whitelist = 1;
}